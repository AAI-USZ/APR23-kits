</[INS]/></[LOC]/>, this, VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( 0 < ( VAR_1. length ) )
</[INS]/></[LOC]/> 1.0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Integer.parseInt (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String</[INS]/></[LOC]/>? "true" : "false"
</[INS]/></[LOC]/> VAR_1 = null ;
</[INS]/></[LOC]/> ( ( java.lang.String ) (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> update</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> min
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> toUpperCase ( ).</[INS]/></[LOC]/>. toUpperCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> position</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> position
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if (! ( VAR_1. contains ( c ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { synchronized ( this. VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> list. METHOD_1 ( VAR_1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( i > 0 )
</[INS]/></[LOC]/> ) { if ( null!= ( TYPE_1. METHOD_2 ( VAR_1 ) )</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( VAR_2. isEmpty ( ) ) return null ;
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[INS]/></[LOC]/> ( )
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> values. get (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( ) ;</[INS]/></[LOC]/> java.lang.System.out.println ( ) ;
</[INS]/></[LOC]/> ) { if ( VAR_2 > 0</[INS]/></[LOC]/> else { return 0 ; } }
</[INS]/></[LOC]/> size,</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2 == null ) { return null ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> static</[INS]/></[LOC]/> long id,
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view</[INS]/></[LOC]/> final
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>2 )!= null ) { if ( VAR_</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Exception
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> listener</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> update
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> [ ]</[INS]/></[LOC]/> java.util.Arrays.asList (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> if (! ( METHOD_2 ( ) ) ) { METHOD_3 ( false ) ; } else {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, true
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>util</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>List < TYPE_1 ></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -- ; break</[INS]/></[LOC]/> break ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int count =</[INS]/></[LOC]/> ; if ( count == 0</[INS]/></[LOC]/> return count ; return count
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + STRING_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length
</[INS]/></[LOC]/>. trim ( )
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/> java.util.Arrays.asList (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> split</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getInt
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { throw new java.lang.NullPointerException ( )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ||
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> < java.lang.String >
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[INS]/></[LOC]/> java.lang.System.out.println ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( this. VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> this
</[INS]/></[LOC]/> ; if ( VAR_1 == null ) return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> status
</[INS]/></[LOC]/> ; k
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id. get
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2. METHOD_2 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/> ( INT_1 +</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_3
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> error</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> if ( VAR_1 ) return ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> ( ( ( VAR_1 )!= null ) &&</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> message</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> message
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> position
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> listener</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> listener</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3 ( VAR_1, VAR_</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Math.round ( (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( ( VAR_2 ) == null ) { VAR_2 = METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> java.lang.System.exit ( 0 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length
</[INS]/></[LOC]/> VAR_2 = TYPE_2. METHOD_2 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> time -</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1. METHOD_1 ( ) )!= null</[INS]/></[LOC]/> else { return null ; } }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public TYPE
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> || (! ( VAR_2. METHOD_2 ( ) ) ) ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 = METHOD_</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return false ; } return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId (</[INS]/></[LOC]/>, item. getText (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - ( VAR_2. size ( ) ) )
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[INS]/></[LOC]/> "id", 1 ) ; put (
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> METHOD_4 ( VAR_2 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[INS]/></[LOC]/> VAR_4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> method
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/> if ( ( VAR_1 [ 0 ] ) > ( VAR_3 ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( - 1 ) *</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/>1. METHOD_2 ( ) ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.</[INS]/></[LOC]/>2 = new TYPE_</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( x - ( VAR_1 ) )
</[INS]/></[LOC]/> ) { if ( this. contains ( VAR_1 )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/>, new java.util.HashSet < TYPE_1 > ( )</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>1 = VAR_
</[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_1 ( ) ;</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getData
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> : 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> setValue
</[INS]/></[LOC]/> - (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1</[INS]/></[LOC]/>1, 0, VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> if ( VAR_1!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> execute</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3. size ( ) ) > 0 ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>.0</[INS]/></[LOC]/>.0</[INS]/></[LOC]/>.0</[INS]/></[LOC]/>.0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> src</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> src
</[INS]/></[LOC]/> value = ( ( java.lang.Integer ) ( VAR_2 ) ) ;</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> value
</[INS]/></[LOC]/> return this ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2, VAR_</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>.parseInt</[INS]/></[LOC]/>. toString (
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> + 1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3. height
</[INS]/></[LOC]/> if ( ( out ) == null ) return ;
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> str
</[INS]/></[LOC]/> ) { if ( null!= ( VAR_2 )</[INS]/></[LOC]/> return false ; }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (!</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 = false ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>java.util.Vector < TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int i
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1</[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) || ( ( VAR_1 ) ==</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) || ( ( VAR_1 ) ==</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> args
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/>, VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( short )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>err
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> { if ( VAR_1 <= 0 ) { return 0 ; } else</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; VAR_1 = true
</[INS]/></[LOC]/> java.lang.System.out.println ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( java.lang.Integer ) (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. date
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/>. get ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( VAR_1, VAR_2, index, info, VAR_3 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[INS]/></[LOC]/> VAR_3. commit ( ) ;
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( float ) (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. get (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( context, intent ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> {
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Boolean
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> isEmpty</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) - 1
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> else { METHOD_2 ( VAR_2, null ) ; return false ; } }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( VAR_2!= null ) && (</[INS]/></[LOC]/> )</[INS]/></[LOC]/> VAR_2 = null ;
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>! ( VAR_2 )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> info
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( value. length ( ) ) > 0 ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) || ( VAR_1. isEmpty ( ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Boolean. getBoolean</[INS]/></[LOC]/>. toString (
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> :
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_1 ( STRING_1, STRING_2 ) ;
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> ) { synchronized ( this</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.String id,</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3. i = 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> parameters = new java.util.HashMap < > ( ) ;
</[INS]/></[LOC]/>1 = null ; VAR_</[INS]/></[LOC]/> VAR_2 = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>6, STRING_5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> synchronized ( VAR_2 ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[INS]/></[LOC]/> VAR_2 = null ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int result = (</[INS]/></[LOC]/> )? 1 : 0 ; return result
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> if ( ( VAR_1. value )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.awt.Color
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws TYPE_1, TYPE_2, java.io.IOException</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> equals
</[INS]/></[LOC]/> date!= null?</[INS]/></[LOC]/> : null
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 ) == null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> ( ( ( VAR_2 ) - ( VAR_3 ) ) <= 0 )? 0 :
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> "name"
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[INS]/></[LOC]/> int y = 0 ; for ( int x = 0 ; x <= num ; x ++ ) { y += x ; }</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.util.List <</[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, result
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3. METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_2. get ( VAR_1 ) )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> target</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> init</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2. METHOD_2 ( )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/>3. METHOD_1 ( VAR_1 ) ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> for ( TYPE_1 item : VAR_2 ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> this. token = token ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> count
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2. put ( size, 0 ) ;
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Math.abs ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) ) <</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public void</[INS]/></[LOC]/> if ( node == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( params ) == null ) return params = new java.util.ArrayList < > ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> while</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = STRING_1 ; VAR_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.io.InputStream</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.io.IOException
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= 0 ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> > 0
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean isEmpty</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, 1
</[INS]/></[LOC]/>4 class, VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ). toUpperCase (
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>.
</[INS]/></[LOC]/> new java.util.ArrayList < TYPE_1 > (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> == null? null : VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.util.HashSet < java.lang.String > (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/>, VAR_3
</[INS]/></[LOC]/> VAR_2,
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return true ;</[INS]/></[LOC]/> return false ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. METHOD_1 ( VAR_1 ) ; METHOD_3 ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>!= null ) && ( ( VAR_2</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 += super. METHOD_1 ( ) ;
</[INS]/></[LOC]/> if (! (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) ) { VAR_1. remove (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. add (</[INS]/></[LOC]/> )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> ) { if ( ( getContext ( ) )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 1 - (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( TYPE_1. METHOD_2 ( STRING_1 ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2, name, VAR_</[INS]/></[LOC]/>, VAR_4
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[INS]/></[LOC]/> final</[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> index
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= ( - 1 )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> else {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. METHOD_1 ( )
</[INS]/></[LOC]/> final
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> name
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 instanceof java.lang.String
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> if ( ( data ) == null ) data = new TYPE_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws java.io.IOException</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> set
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, final TYPE_2 VAR_2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>.parseInt
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> setText ( null ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_4 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>2, VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> < < INT_1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> position
</[INS]/></[LOC]/> new java.util.ArrayList (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> data
</[INS]/></[LOC]/>, java.lang.String message
</[INS]/></[LOC]/> java.lang.System.out.println ( this. VAR_1. METHOD_2 ( INT_1 ) ) ;
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> )!= null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( getActivity ( ) )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> { if ( count < 0 ) { VAR_1. setText ( STRING_1 ) ; } else</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, value : : toString
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Object</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. toString (
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[INS]/></[LOC]/> if ( VAR_1 == null ) return VAR_2 ; else if ( VAR_2 == null ) return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return null ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_3 (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1. getContext</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> event</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> event
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( VAR_1. get ( STRING_1 ) )!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> size = 0 ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[INS]/></[LOC]/> return
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) - 1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>TYPE_2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Long</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals ( VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Object getId
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> if ( position >= 0 ) {</[INS]/></[LOC]/> return null ; }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add
</[INS]/></[LOC]/> VAR_3 = true ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Double. METHOD_1 (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[INS]/></[LOC]/> else { VAR_1 = 0 ; METHOD_2 ( VAR_1 ) ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int i =</[INS]/></[LOC]/> return i < 0? i + 1 : i ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_3 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> continue
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1.</[INS]/></[LOC]/> VAR_1.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_1 ( new byte [ ] { ( ( byte ) ( b ) ) }, 0, 1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. trim ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.List < java.lang.Integer > result =</[INS]/></[LOC]/> if ( result. isEmpty ( ) ) { result. add ( 1 ) ; } return result ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.lang.Object [ ] {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>io</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>File
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> "true"</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_3</[INS]/></[LOC]/> "false"
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public void
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> try {</[INS]/></[LOC]/> } finally {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> break ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 0,
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ||
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ; METHOD_2 (
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>2, VAR_
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_4 ) < time ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String data</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> data
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String.format (</[INS]/></[LOC]/>, VAR_1, VAR_2, VAR_3, VAR_4, VAR_5 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( event ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> java.lang.Math.round (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> target =</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Calendar c = java.util.Calendar.getInstance ( ) ; c. set ( 0, 0, 0 ) ; METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> path</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> c. getTime (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, new java.util.Date</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> java.lang.Integer.parseInt (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( i!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ( size ) -- ;
</[INS]/></[LOC]/> ) ; METHOD_4 (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> if ( VAR_1 == null ) return false ; else</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> else
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_5
</[INS]/></[LOC]/> if ( ( ( java.lang.Boolean ) ( VAR_2 ) ) )
</[INS]/></[LOC]/>. getTime ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { try</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return getString</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> "name"
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1 ) ;
</[INS]/></[LOC]/>!= null? VAR_1</[INS]/></[LOC]/> : null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, java.lang.Object value
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( java.lang.String [ ] ) (</[INS]/></[LOC]/> ) )
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. remove ( VAR_1. METHOD_2 ( ) ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> file. length ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>out
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size
</[INS]/></[LOC]/> ) { if ( ( ( this. VAR_3 ) < VAR_1 ) || ( ( this. VAR_4 ) < VAR_2 )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> execute
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> remove
</[INS]/></[LOC]/> ( get ( key ) ) == null? null :
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( VAR_1 ) ; VAR_1 = 0 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[INS]/></[LOC]/> synchronized
</[INS]/></[LOC]/> if ( value!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ( this.</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> "\n"
</[INS]/></[LOC]/>2, VAR_
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>java</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>util</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Collection</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> values (
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> key</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> value</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> key</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> value
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Map < java.lang.String, java.lang.String > parameters</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> parameters
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> VAR_1 = null ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> %
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ; this. VAR_1 = VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int index</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; VAR_2 = VAR_3. get ( ( index == ( - 1 )? 0 : index )
</[INS]/></[LOC]/> end = false ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> == ( - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> offset</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. context = context ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = 0 ;
</[INS]/></[LOC]/> VAR_1. start ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> title
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.HashSet</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> format
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Name
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { if (!</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( ( length ( ) ) > 0 ) &&</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double time =</[INS]/></[LOC]/> return time ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> index
</[INS]/></[LOC]/>. type
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -=</[INS]/></[LOC]/> ( -</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this : : execute</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> else</[INS]/></[LOC]/> else { update ( ) ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> if ( n == false )</[INS]/></[LOC]/> VAR_1 = n ;
</[INS]/></[LOC]/>, ( - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> android.view.View view
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) - 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[INS]/></[LOC]/> return ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>List</[INS]/></[LOC]/> new java.util.ArrayList < > (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> ( VAR_2 ) ++ ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> status = VAR_2 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[INS]/></[LOC]/> long. class
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (
</[INS]/></[LOC]/> if ( index < ( METHOD_2 ( ). size ( ) ) ) {</[INS]/></[LOC]/> else { return null ; } }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> throws TYPE_1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Long. METHOD_1</[INS]/></[LOC]/> VAR_1. METHOD_2</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( ( length ) / ( java.lang.Math.abs ( length ) ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> if ( ( this. METHOD_2 ( ) ) == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> final</[INS]/></[LOC]/> { return type</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null</[INS]/></[LOC]/>, null
</[INS]/></[LOC]/>1. METHOD_4 ( ). METHOD_5 ( ) ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> throw
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (! ( VAR_1. METHOD_2 ( ) ) ) )
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> throws java.io.IOException</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_4 = this. state ;
</[INS]/></[LOC]/> new java.util.Properties ( ) ; VAR_2. METHOD_3 (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new TYPE_1 ( name, name )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> byte [ ] data
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Set</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println ( ( STRING_1 + response ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> update
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return ( ( boolean )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> synchronized ( buffer ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> + 1
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ++
</[INS]/></[LOC]/>, null</[INS]/></[LOC]/>, null
</[INS]/></[LOC]/>, int length
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = new</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> java.lang.System.out.println ( date. substring ( 0, INT_1 ) ) ;
</[INS]/></[LOC]/> VAR_3
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, STRING_1, STRING_2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_3!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[INS]/></[LOC]/> ) { if ( data!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3. METHOD_4 ( ) )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE</[INS]/></[LOC]/>. METHOD_2 ( )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1, VAR_2
</[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String getName</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/>!</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> isEmpty</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals
</[INS]/></[LOC]/> add ( VAR_2 ) ;
</[INS]/></[LOC]/> java.lang.Math.round ( (</[INS]/></[LOC]/> ) )
</[INS]/></[LOC]/>, java.lang.String status</[INS]/></[LOC]/> this. status = status ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. get (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[INS]/></[LOC]/>, int count
</[INS]/></[LOC]/> if ( count > 0 ) {</[INS]/></[LOC]/> else { VAR_3 = false ; } }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> setEnabled</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/> this. METHOD_3 ( ) ;
</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> - 1 )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> p = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.err.println
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3 ) {</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_3 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Exception {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2. METHOD_2 ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> status
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[INS]/></[LOC]/> true
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.ArrayList < TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 > ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ||
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> abstract
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if (! ( VAR_2. contains ( VAR_1 ) ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> default</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>3 [ VAR_</[INS]/></[LOC]/> ]
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2 == null ) return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, new java.lang.Object ( )
</[INS]/></[LOC]/> if (! ( VAR_1. contains ( answer ) ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> open</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> - (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> null,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/>!</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> time == 0? 0 :
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> t</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return null ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Builder
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. getClass ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> > 0 ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { if ( ( name ) == null )</[INS]/></[LOC]/> else { VAR_2. METHOD_2 ( name, VAR_1. METHOD_3 ( ) ) ; } }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getData ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. toUpperCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[INS]/></[LOC]/> view</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. state = state ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Long
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )</[INS]/></[LOC]/> else return 0 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.util.ArrayList <</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> > list</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int index</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> list. get ( index )</[INS]/></[LOC]/> return ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>void
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> count = 0 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>static</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. toUpperCase (
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> assert VAR_2 >= 0 ;
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> if ( VAR_2 == null ) return 0 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> update ( )
</[INS]/></[LOC]/>3. METHOD_2 ( false ) ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>static
</[INS]/></[LOC]/> VAR_1 [ 0 ] =</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Id
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (! (</[INS]/></[LOC]/> ) )
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/>4 ) * ( VAR_2. height ) ) - ( ( VAR_</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> y -</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/>, position
</[INS]/></[LOC]/> VAR_5 = ( VAR_5 ) + 1 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> java.lang.Math.abs (</[INS]/></[LOC]/> )</[INS]/></[LOC]/> ( java.lang.Math.abs</[INS]/></[LOC]/> )</[INS]/></[LOC]/> java.lang.Math.abs (</[INS]/></[LOC]/> )</[INS]/></[LOC]/> java.lang.Math.abs (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double y</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0 ; y = METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[INS]/></[LOC]/>, VAR_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y
</[INS]/></[LOC]/> ( VAR_2 )
</[INS]/></[LOC]/> break ;</[INS]/></[LOC]/> break ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> *
</[INS]/></[LOC]/> * VAR_1 )</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; } return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> tmp</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> tmp
</[INS]/></[LOC]/> ) { synchronized ( VAR_2</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return</[INS]/></[LOC]/> ; } else { return super. METHOD_1 (</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. size ( )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Double</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. values. get ( name )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> buffer =
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> setValue (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> static
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return METHOD_1 (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> show
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( errors ) == null? "0" :
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) { return null ; } else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public int size</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>? 0 :</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. size</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Long
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> show
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> void</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1, true
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 ) -- ; ( VAR_
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> time = 0
</[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> > ( - 1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( ( VAR_1 ) > 0 ) &&</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> out</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> out</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> out</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> out. METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ( this. token ) ; out</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> synchronized</[INS]/></[LOC]/> METHOD_5 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> value</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> value + 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>.parseInt
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, null
</[INS]/></[LOC]/> if ( value!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if (! ( this. VAR_1. equals ( VAR_1 ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4 (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>1 = 0.0 ; VAR_2 = 0.0 ; VAR_
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> else { java.lang.System.out.println ( message ) ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. setText
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1
</[INS]/></[LOC]/> synchronized</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/>. name ( )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = VAR_1. toLowerCase ( ) ;
</[INS]/></[LOC]/> result =
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getData ( )
</[INS]/></[LOC]/> VAR_2 = null ;
</[INS]/></[LOC]/>, event
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Map</[INS]/></[LOC]/> java.lang.Integer,</[INS]/></[LOC]/>. values ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2 == null?</[INS]/></[LOC]/> : VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( VAR_2 )!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> startTime
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_4. METHOD_4 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> f
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> = VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4. METHOD_3 ( false, context ) ; TYPE_
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return STRING_2 ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. name ( )</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>println
</[INS]/></[LOC]/> false,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { synchronized ( VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> stringBuilder.append
</[INS]/></[LOC]/> new java.io.File (</[INS]/></[LOC]/>. getName ( ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> remove</[INS]/></[LOC]/> METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( date. toString ( ) )
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) || ( VAR_1 instanceof java.lang.Object [ ] )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int index</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> :
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> num
</[INS]/></[LOC]/>. getId ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Object</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> instanceof java.lang.String</[INS]/></[LOC]/>. toString ( ) ) ) : VAR_2. METHOD_2 ( VAR_1, VAR_1. getClass (
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2 == null ) VAR_3. remove ( TYPE_2. METHOD_2 ( VAR_1 ) ) ; else
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/> new java.util.ArrayList (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Activity
</[INS]/></[LOC]/>, int start</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start
</[INS]/></[LOC]/> 1 :</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[INS]/></[LOC]/>util.Map < java.lang.String, java.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { synchronized ( VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = new java.util.ArrayList < ></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>...</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> %</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> k
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if (! ( VAR_2. isEmpty ( ) ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null
</[INS]/></[LOC]/> if ( VAR_1 < 0 ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0 ; } else if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> > INT_1 ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = INT_1</[INS]/></[LOC]/> else { this. VAR_2 = VAR_1 ; } }
</[INS]/></[LOC]/>, null
</[INS]/></[LOC]/> ( VAR_1 ) == null? 0 :
</[INS]/></[LOC]/> synchronized ( VAR_2 ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( getActivity ( ) )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> field</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> field
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> VAR_1 += INT_1 ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, final java.lang.String size
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( context == null ) { return true ; }
</[INS]/></[LOC]/> param,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) && ( ( VAR_2 )!= null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id</[INS]/></[LOC]/> get ( METHOD_2 ( id ) ). end ( this ) ; status.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[INS]/></[LOC]/> toString ( ).
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( this. VAR_2 )!= null )
</[INS]/></[LOC]/> new</[INS]/></[LOC]/> ( x )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> intent</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> intent</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> intent
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { synchronized ( VAR_3</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/>. getName ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/>, null
</[INS]/></[LOC]/> VAR_1. METHOD_5 ( VAR_2 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context. METHOD_2 (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> put</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> put
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> number
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return 0 ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> abstract
</[INS]/></[LOC]/> if ( VAR_4!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> size ( ) )!= 0? ( VAR_1.</[INS]/></[LOC]/> : true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> ) { if ( ( VAR_2. METHOD_3 ( ) )!= ( - 1 )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ++
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 [ position ] ) == null ) return false ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getData
</[INS]/></[LOC]/> return null ;
</[INS]/></[LOC]/> android.content.Context context,</[INS]/></[LOC]/> context,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> return - 1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. set (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_2 = VAR_2 ;
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> if ( ( VAR_1 ) == 0 ) { return null ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( VAR_1. METHOD_2 ( ) ) return ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) - 1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> endTime</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> endTime
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Class <? ></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. set ( true ) ;
</[INS]/></[LOC]/> false
</[INS]/></[LOC]/> ) { synchronized ( VAR_2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. METHOD_1</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws java.io.IOException</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/>. METHOD_2 ( )
</[INS]/></[LOC]/> VAR_2. open ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> true
</[INS]/></[LOC]/> if ( true ) return ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, context</[INS]/></[LOC]/>, context</[INS]/></[LOC]/>, context
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[INS]/></[LOC]/>, boolean add
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( - (</[INS]/></[LOC]/> ) )</[INS]/></[LOC]/> ( - (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> update
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>HashSet
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 = null ; super. METHOD_1 ( context ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>3. METHOD_</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( VAR_1!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1L
</[INS]/></[LOC]/> "0",</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> obj</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> j</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> j</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> j</[INS]/></[LOC]/> {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> obj</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> j</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - 1
</[INS]/></[LOC]/> TYPE_1. setText ( null ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( date ) == null ) return null ; else</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> date. toString
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Object
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> error
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[INS]/></[LOC]/> new java.util.HashSet (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> android.view.View view,
</[INS]/></[LOC]/> getText ( ).
</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> super. METHOD_1 ( result ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false, false, false
</[INS]/></[LOC]/>3, VAR_</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 == null ) return null ;
</[INS]/></[LOC]/> data. length,
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> try {</[INS]/></[LOC]/> } finally {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Context
</[INS]/></[LOC]/> final
</[INS]/></[LOC]/> VAR_2. commit ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, "0"
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int count =</[INS]/></[LOC]/> return count < 0? 0 : count ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2. toString ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>NotNull</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2 ) return false ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.String VAR_3</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> error
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return!</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) || ( ( size ( ) ) == 0 )
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[INS]/></[LOC]/> else VAR_6. METHOD_2 ( 1.0F ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> offset
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> METHOD_2 ( VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2 = null ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. toString ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> short
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> node. delete ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> java.lang.System.out.println ( src. length ) ;
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) ) + 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> synchronized ( this. VAR_2 ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, position
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>void
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( TYPE_1. METHOD_2 ( VAR_1 ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { VAR_1 = 1 ;</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3. METHOD_4 ( VAR_4, STRING_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void remove</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> delete
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( super. METHOD_1 ( ) ) || (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=
</[INS]/></[LOC]/> VAR_6 = VAR_7 ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> path
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_3 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >= 1 ; i --
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[INS]/></[LOC]/> ( ( double ) (</[INS]/></[LOC]/> ) ) / ( VAR_1. length )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( format!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> ( VAR_1. length ( ) ) == 0 ) || ( (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( VAR_1, event )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, 1, 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws TYPE_1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( ( state )!= 1 ) && ( ( state )!= INT_1 )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> return false ; }
</[INS]/></[LOC]/> super. update ( VAR_1, VAR_2 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> substring</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> substring
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 = VAR_3 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size</[INS]/></[LOC]/> ) < 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1. toString ( ) ) ;
</[INS]/></[LOC]/> super.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( path!= null ) && ( path</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = null</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/> if ( ( context ) == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Date
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 0,</[INS]/></[LOC]/> 0,
</[INS]/></[LOC]/> { if ( VAR_2. getText ( ). isEmpty ( ) ) { } else</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> throws java.io.IOException</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.io.File</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.io.File
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 ) == null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1. get ( 0 ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> c</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( keys [ c ] )
</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3 (</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> = true ; first
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> min
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> TYPE_1 <</[INS]/></[LOC]/> ></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> super.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> == null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( this. VAR_3 ) ++ ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> STRING_1. equals (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[INS]/></[LOC]/> return null ; }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { j =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; VAR_1. put ( name, j ) ; } return
</[INS]/></[LOC]/> ) { if ( ( VAR_5 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> state
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1 ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>TYPE</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> VAR_2 = null ;</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2. get</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. set (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Upper
</[INS]/></[LOC]/> getString (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> {</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Class <? extends</[INS]/></[LOC]/> ></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int position =</[INS]/></[LOC]/> ; METHOD_1 ( position
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[INS]/></[LOC]/> ( ( VAR_2 )!= null ) && (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> ; position = position
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.io.File
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> "0"
</[INS]/></[LOC]/> VAR_2. add ( VAR_3 ) ;
</[INS]/></[LOC]/> if ( ( this. errors ) == null ) { this. errors = new java.util.ArrayList < > ( ) ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. METHOD_2 ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws java.io.IOException
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> long time</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> time
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return ( CHAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> new java.lang.Long (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> java.lang.System.exit ( 0 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> return new TYPE_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> VAR_1 < 0 ) this. VAR_1 = 0 ; else if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; else</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/>, className
</[INS]/></[LOC]/> false,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> put
</[INS]/></[LOC]/> [ 0 ]
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> position
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( size ) -- ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1. METHOD_3 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1 (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> if ( this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. get ( ) ) { VAR_1. set (</[INS]/></[LOC]/> )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( ( VAR_2 )!= null ) && ( ( VAR_2. METHOD_2 ( ) )!= null )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super.</[INS]/></[LOC]/> super.</[INS]/></[LOC]/> super.</[INS]/></[LOC]/> super.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (! (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) &&</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[INS]/></[LOC]/> return ;</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( this. VAR_1. size ( ) ) >= ( this. VAR_2 ) ) return 0 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null, 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> delete
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> return VAR_1. size ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/> new java.util.Date (</[INS]/></[LOC]/>. getTime ( ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[INS]/></[LOC]/> ; synchronized ( VAR_2 ) { VAR_1</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ( ( VAR_2 )!= null ) &&
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.String name
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> set</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[INS]/></[LOC]/> int VAR_2,</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> offset
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return true ;</[INS]/></[LOC]/> return false ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> parameters
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> value</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( length ) ++ ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) && (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 =</[INS]/></[LOC]/> super. METHOD_1 (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2. METHOD_3 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. getId ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[INS]/></[LOC]/>!</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> ) )
</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> == null
</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> false,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( ( VAR_5 )!= null )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[INS]/></[LOC]/> -</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/> if (! ( VAR_2. contains ( VAR_1 ) ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean isEmpty</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> isEmpty</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.lang.Object ( ) ; else return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> else { return null ; } }
</[INS]/></[LOC]/> VAR_1. update ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1. METHOD_4 ( 1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( names )!= null ) && ( (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Set
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return 0 ;
</[INS]/></[LOC]/> { if ( VAR_1 instanceof TYPE_2 ) { super. METHOD_1 ( VAR_1 ) ; } else</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2. METHOD_2 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>4 ( ) ; METHOD_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) == 1
</[INS]/></[LOC]/>3 = VAR_1 ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> ( ( int ) ( (</[INS]/></[LOC]/> ) ) & - 1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> assertTrue</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/>. size ( ) ) == 0 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null )
</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?
</[INS]/></[LOC]/>2. METHOD_1 ( ) ; VAR_</[INS]/></[LOC]/> else {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>3 ( VAR_6 ) ; METHOD_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0.0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0.0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0.0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1.0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1.0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1.0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> arg</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> arg
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> final java.lang.Double value =</[INS]/></[LOC]/> if ( value!= null ) { return value ; } return 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2 =
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> android.content.Intent intent =</[INS]/></[LOC]/> ; METHOD_2 ( intent
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>lang</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2. add ( this ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return values. contains</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( name ) == null ) { name = message ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>final
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> set
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> source
</[INS]/></[LOC]/> TYPE_1 VAR_1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.lang.Thread ( ( ) - > VAR_4. METHOD_1 ( VAR_3, VAR_2 ) ). start ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, int offset</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> offset
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if (! ( VAR_2. isEmpty ( ) ) )</[INS]/></[LOC]/> else VAR_1 = null ;
</[INS]/></[LOC]/> VAR_1!= null?</[INS]/></[LOC]/> : 0</[INS]/></[LOC]/> name!= null?</[INS]/></[LOC]/> : 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/>, VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return METHOD_2 (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> commit ( ) ; c.
</[INS]/></[LOC]/> ) { if ( ( this. VAR_2 )!= null</[INS]/></[LOC]/> return false ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) || ( VAR_1. trim ( ). isEmpty ( ) )
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>TYPE</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> data
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> try {</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> type
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.HashSet < java.lang.String > ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[INS]/></[LOC]/> ( METHOD_2 ( ) ) == null? null :
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. trim ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> && ( ( t )!= null ) )
</[INS]/></[LOC]/> 1, ( -</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> } return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int result =</[INS]/></[LOC]/> return result ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> id = id. toUpperCase ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.io.File path</[INS]/></[LOC]/> path
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[INS]/></[LOC]/> VAR_2. data = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. add ( TYPE_2. METHOD_2 ( ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { return ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ; } return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> ( title (</[INS]/></[LOC]/> ) )
</[INS]/></[LOC]/>, null
</[INS]/></[LOC]/> ) { if ( ( TYPE_2. METHOD_2 ( VAR_2 class ) )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( c!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>7</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[INS]/></[LOC]/> i -</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Equals</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( this. VAR_2 ) == null ) throw new java.lang.Exception ( ) ; else
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> format
</[INS]/></[LOC]/> ) { if ( ( VAR_3 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> {</[INS]/></[LOC]/> } else { this. VAR_1 = null ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> if ( var!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long
</[INS]/></[LOC]/> ( VAR_1 == null )? null :</[INS]/></[LOC]/> view,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> == null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( time ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( VAR_1 == null ) || (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return true ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> update
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>1, VAR_
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) ) ) == null ) || ( METHOD_2 ( file. getName ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return super. toString</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. toLowerCase</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> isEmpty</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>CharSequence</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ||</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return</[INS]/></[LOC]/> return true ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2. METHOD_1 ( index ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double result =</[INS]/></[LOC]/> return result ;
</[INS]/></[LOC]/> ( ( float ) (</[INS]/></[LOC]/> ) )</[INS]/></[LOC]/> ( ( float ) (</[INS]/></[LOC]/> ) )
</[INS]/></[LOC]/> ( ( long ) (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[INS]/></[LOC]/> if ( ( VAR_2. size ( ) ) > 1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.HashMap</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.HashMap
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Integer
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println ( STRING</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println ( STRING</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.String id,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Id
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1. toString ( ). trim ( ). isEmpty ( ) ) { return ; }
</[INS]/></[LOC]/> ( VAR_1!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( size ) ++ ;
</[INS]/></[LOC]/> VAR_1. getClass ( ). equals ( VAR_2. getClass ( ) ) ) && ( (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.NullPointerException</[INS]/></[LOC]/> ) ; if (! ( set. contains ( p ) ) ) set. add ( p
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private static
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Upper
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( VAR_1!= 0 ) {</[INS]/></[LOC]/> } else { VAR_3 = INT_1 ; }
</[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ++ ; if ( ( VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return true ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Integer</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> position</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( ( VAR_1 ) + position )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> android.content.Context context</[INS]/></[LOC]/> context
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( getActivity ( ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> set</[INS]/></[LOC]/> java.lang.String path,</[INS]/></[LOC]/> this. path. set ( path ) ;
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_2. toString ( ) ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[INS]/></[LOC]/> ( ( ( VAR_1 )!= null ) &&</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> info
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Math.random
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +=
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[INS]/></[LOC]/> if (! ( VAR_5 ) ) { return ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>boolean
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_2 ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. getId ( )
</[INS]/></[LOC]/> METHOD_2 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_5 ( ) ;</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 = true
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> VAR_3 = 0 ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/> this. id = id ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, ( - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> *
</[INS]/></[LOC]/>, new TYPE_1 [ 0 ]
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>5 ( ). METHOD_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.util.Collections.sort ( list ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> -</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> get
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> int min = VAR_1 [ 0 ] ; for ( int x : VAR_1 ) { if ( x < min ) { min = x ; } }</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> min
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >= 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >= 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y
</[INS]/></[LOC]/> = startTime</[INS]/></[LOC]/> startTime =</[INS]/></[LOC]/> startTime =
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> p
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> if ( id == null ) { return null ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) ; java.lang.System.out.println ( VAR_1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. size ( )</[INS]/></[LOC]/>. size ( )
</[INS]/></[LOC]/> if ( VAR_2 == 0.0 ) { return value ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double ) ( ( int</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> num</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> num
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/>, ( - 1 )
</[INS]/></[LOC]/> try {</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = value ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_2</[INS]/></[LOC]/> return</[INS]/></[LOC]/> return null ;
</[INS]/></[LOC]/> final</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>...</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Arrays.asList (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> boolean result = false ;</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result =</[INS]/></[LOC]/> return result ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, message
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static
</[INS]/></[LOC]/> if ( VAR_2!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> break ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Integer</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( - 1 )
</[INS]/></[LOC]/> ) { if ( ( VAR_1 ) > 0</[INS]/></[LOC]/> else { } }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/>, VAR_4
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2. METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. isEmpty ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int i =</[INS]/></[LOC]/> return i ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>!= null ) { if ( time</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public java
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Integer.toString (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return this. field [</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ] [</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { synchronized ( this. VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -
</[INS]/></[LOC]/> if ( VAR_1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[INS]/></[LOC]/> { METHOD_2 ( ) ; } else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>.parseInt
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Long id =</[INS]/></[LOC]/> ; if ( id. equals ( 0L ) ) { VAR_1. METHOD_2 ( null</[INS]/></[LOC]/> else { VAR_1. METHOD_2 ( id ) ; } }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> token
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> startsWith
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Collections.sort ( content ) ;
</[INS]/></[LOC]/> ( -</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 =</[INS]/></[LOC]/> ; VAR_3. put ( VAR_1, VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return this. count (</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( iterator == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( node == null ) return null ;
</[INS]/></[LOC]/> ( ( java.lang.Object ) (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4, false</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>1 ( VAR_1 ) ; VAR_5. METHOD_
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String value =</[INS]/></[LOC]/> ; return ( TYPE_1. METHOD_2 ( value ) ) && (! ( value. isEmpty ( ) )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( VAR_1. METHOD_2 ( ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. get</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[INS]/></[LOC]/> == null ) { throw new java.lang.NullPointerException (</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> tmp</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> tmp
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_1. size ( ),
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.Random ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 = true ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1 set</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { synchronized ( this. VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, int type</[INS]/></[LOC]/>, type
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return ;
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> new java.lang.String [ ] {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. start</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println ( STRING</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 =
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> t,
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( ( VAR_2. size ( ) ) > 0 )
</[INS]/></[LOC]/> final
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[INS]/></[LOC]/> break ;</[INS]/></[LOC]/> ; break</[INS]/></[LOC]/> break ;</[INS]/></[LOC]/> break ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_3</[INS]/></[LOC]/> return VAR_3 ;
</[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> new java.util.ArrayList < TYPE_1 > (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[INS]/></[LOC]/> || ( ( args.length ) == 0 ) ) { return str ; } else</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> end</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3 = 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( VAR_2 )!= null ) && ( (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> false :</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>6</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> - 1 ) )
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + 1 )
</[INS]/></[LOC]/> index
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> new java.util.ArrayList (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( ( VAR_1 )!= null ) && ( ( VAR_1. METHOD_2 ( VAR_2 ) )!= null )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> throw new TYPE_3 ( STRING_1 ) ; } else {</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. trim (
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> { if ( ( VAR_1 ) < 1 ) { } else</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> static
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> java.lang.Math.abs (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_5 ( )</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ). trim
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_5. show ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> static
</[INS]/></[LOC]/> } catch ( TYPE_2 VAR_2 ) { return ; }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. length</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. length
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1,
</[INS]/></[LOC]/> (! (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Vector
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getType</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> type
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> event</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> event
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { synchronized ( VAR_1</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view
</[INS]/></[LOC]/> ) { if (! ( VAR_1. isEmpty ( ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return</[INS]/></[LOC]/>Arrays.as</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Object [ ]
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> for</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item!= null ; item</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) {</[INS]/></[LOC]/>1 = null ; VAR_
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/>! ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) && (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2. METHOD_2 ( 0, STRING_1 ) ; VAR_2. METHOD_3 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals ( fieldName
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String name</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_1 = null ;
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context
</[INS]/></[LOC]/> new java.lang.String [ ] {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> native</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/>, "type"
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. trim ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Vector
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Properties p</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> p
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> int count = 0 ;</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> count += 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> count
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> compareTo</[INS]/></[LOC]/> ) == 0
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ( VAR_1 + 1 ),
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> break
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { return true ; } else return false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals
</[INS]/></[LOC]/>. toString ( )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> else { VAR_3. setState ( VAR_4 ) ; }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( METHOD_1 ( ) ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) <=
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> setState (</[INS]/></[LOC]/>, 0 )
</[INS]/></[LOC]/> if ( ( VAR_4 )!= null )
</[INS]/></[LOC]/> [ 0 ]
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, ( ) - > 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>! (</[INS]/></[LOC]/>. equals ( data ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long
</[INS]/></[LOC]/> if ( null == ( VAR_2 ) ) VAR_2 = new java.util.HashMap < java.lang.String, java.lang.String > ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2 = false ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>List
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, TYPE_2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> null,
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2 ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> getView ( ) )!= null ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.util.HashSet (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>lang.String token, java.
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> equals</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, this
</[INS]/></[LOC]/> ) { if (! ( TYPE_2. METHOD_3 ( ). equals ( "0" ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> min
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> show
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> data</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> data</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> data
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( this. VAR_1 ) == null ) { this. VAR_1 = VAR_1 ; }</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = VAR_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> true,
</[INS]/></[LOC]/> i, j, k, VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> synchronized
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2 ) return ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long</[INS]/></[LOC]/> return this. VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, VAR_2</[INS]/></[LOC]/>, VAR_2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> for ( int i = 0 ; i < VAR_2 ; i ++ ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return false</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ( ) )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result
</[INS]/></[LOC]/> if ( ( this. VAR_2 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> get
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2, VAR_</[INS]/></[LOC]/>, null, null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. VAR</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> show
</[INS]/></[LOC]/>. build ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> static
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> else { return "0" ; }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, 0, false
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( ++ (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )</[INS]/></[LOC]/> (!</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + 1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.util.Collection <</[INS]/></[LOC]/> ></[INS]/></[LOC]/> java.util.Collection <</[INS]/></[LOC]/> >
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==
</[INS]/></[LOC]/> VAR_2. METHOD_3 ( VAR_3 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> assertEquals ( VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4. getName</[INS]/></[LOC]/> ),
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> function</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> function
</[INS]/></[LOC]/> if ( VAR_2!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>2 = true ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if (! ( METHOD_2 ( ). isEmpty ( ) )</[INS]/></[LOC]/> return null ; }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[INS]/></[LOC]/>. toUpperCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>TYPE
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_4 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/>, ( - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[INS]/></[LOC]/> FLOAT_1 /</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected</[INS]/></[LOC]/> ( this.</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> VAR_3. equals</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[INS]/></[LOC]/> ( message!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 ) == null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> contains
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( listener )!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { while ( VAR_2. contains ( VAR_1. METHOD_2 ( ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( this. getText ( ). isEmpty ( ) ) return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> open
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 ) == null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> toLowerCase ( ).</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { while ( true</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ) { synchronized ( VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ) ; init</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> try {</[INS]/></[LOC]/> } catch ( java.lang.NullPointerException n ) { n. METHOD_3 ( ) ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> a</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> a
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[INS]/></[LOC]/> null!=</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[INS]/></[LOC]/>! (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_4 )!= null ) {</[INS]/></[LOC]/> return null ; }
</[INS]/></[LOC]/> else {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( VAR_1 ) ; VAR_2. add
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static
</[INS]/></[LOC]/> getString (</[INS]/></[LOC]/> )</[INS]/></[LOC]/> getString (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( ) ;
</[INS]/></[LOC]/> java.io.BufferedReader ( new</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new TYPE_1 ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> android.content.Context context,</[INS]/></[LOC]/> context,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> text</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> text
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>int
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[INS]/></[LOC]/> == null</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return false ; } return true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; TYPE_2. remove ( VAR_1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. METHOD_2 ( STRING_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. add</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) || ( ( VAR_1. length ) == 0 )
</[INS]/></[LOC]/> this. VAR_2 = VAR_2 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> error
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> VAR_3 = null ; VAR_4 = null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> get
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> b
</[INS]/></[LOC]/> if ( VAR_1 == null ) return ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int result =</[INS]/></[LOC]/> return result ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Math.abs ( ( (</[INS]/></[LOC]/> - start ) ) )</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> if ( ( VAR_2 ) == null ) return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( i == null ) { return false ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1. getValue ( )
</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> {
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Upper
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ) ; METHOD_4</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && (! ( VAR_2. contains ( VAR_1 ) ) )
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> < < 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> > > > 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?</[INS]/></[LOC]/> : 0
</[INS]/></[LOC]/> if ( ( METHOD_2 ( ) ) == null ) return ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> ) { if ( null!= ( VAR_1 )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/>. get ( )
</[INS]/></[LOC]/> VAR_2 = true ;
</[INS]/></[LOC]/> java.lang.String str =</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 = null ; try {
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>1 = true ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> contains
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> ( VAR_2 ) == null? null :
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 ) == null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> org.testng.Assert.assert
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> keys</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> keys</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> keys
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> new TYPE_1 (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> int VAR_4 = VAR_2 ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 ) *</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> * ( VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static
</[INS]/></[LOC]/>. commit ( )
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.util.List < java.lang.String > status</[INS]/></[LOC]/> throws java.lang.Exception
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Long
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> for</[INS]/></[LOC]/> : VAR_2</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/>. substring ( 0, 1 ). toUpperCase ( ) ) + ( type. substring ( 1 ) )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> byte VAR_2,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, int y
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3, VAR_
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - 1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getContext ( )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ; this. size = size ;
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this
</[INS]/></[LOC]/>. toString ( )
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, java.lang.String token
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Throwable
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. toString (</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) || ( VAR_1!= VAR_1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[INS]/></[LOC]/> ( )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> index = index - 1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2 == null? new TYPE_1 ( ) :
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[INS]/></[LOC]/> int time</[INS]/></[LOC]/>, time
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/>, VAR_1, VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String message,</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> message</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>long</[INS]/></[LOC]/> long</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2 = p ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; METHOD_2 ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>List
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> if ( obj == null ) { return false ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> string
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_2. size ( ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; stringBuilder.append</[INS]/></[LOC]/> return this ;
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1 ) ;
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> ( VAR_1 ) == null? null :
</[INS]/></[LOC]/>, long id</[INS]/></[LOC]/>, id
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String VAR_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> height
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?</[INS]/></[LOC]/> : null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> method</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Object... params
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>L
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> format, java.lang.Object... args</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> format, args
</[INS]/></[LOC]/>4 ( ) ) ; VAR_1. METHOD_1 ( METHOD_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.exit</[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> ( ( VAR_4 )!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> filePath
</[INS]/></[LOC]/> ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> ; if ( VAR_3 == null ) return null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Integer.parseInt (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - ></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ; METHOD_1 (
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>lang</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[INS]/></[LOC]/> java.lang.System.out.println ( x ) ; return ;</[INS]/></[LOC]/> return ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>println</[INS]/></[LOC]/>. intValue ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 [ index ] ) == 0 ) return 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> android.view.View view
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (! ( VAR_1 ) ) ) ) { VAR_1 =! (</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals ( id</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> new java.util.HashMap (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> b = null ;
</[INS]/></[LOC]/> static
</[INS]/></[LOC]/> if ( index < ( pattern. size ( ) ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>lang</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Void
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 ) < 0 ) { VAR_1 = 0 ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> throws java.lang.Exception
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; } return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3 ( VAR_1 ) ; METHOD_
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> i ++ ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2. set ( false ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2. error ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> if ( VAR_1. isEmpty ( ) ) { return ; }</[INS]/></[LOC]/>. trim ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_4. commit ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> static
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, name
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> remove
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_4 ( VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> startsWith
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3. METHOD_3 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> get</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> x
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Map
</[INS]/></[LOC]/> ( file. METHOD_3 ( ) ) == null? null :
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> )!= null? open : new TYPE_1 ( ( - 1 ) )
</[INS]/></[LOC]/> break ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_1 ( VAR_1, java.util.Arrays.asList ( node ) ) ;
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.LinkedList</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.LinkedList
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Object
</[INS]/></[LOC]/> METHOD_4 ( ) ; METHOD_5 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if (! (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> get
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( fileName )!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> default :</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> INT_1,</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_4 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. data
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> =</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.Date ( )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getTime
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private void</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> { if ( ( this ) == ( VAR_1 ) ) { return false ; } else</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> height = VAR_2 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/>1!= null ) && ( ( VAR_</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return false</[INS]/></[LOC]/> return true ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new</[INS]/></[LOC]/>Array</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> null,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> STRING
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_5
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( ( STRING_1 + data ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/>, VAR_1. getName ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size ( )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. get (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private static</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Long. to
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> java.lang.Double. METHOD_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1 ) ;
</[INS]/></[LOC]/> if ( VAR_1 == null ) return new java.util.ArrayList < TYPE_1 > ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> x
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> return ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return text. toString
</[INS]/></[LOC]/> new java.util.Date (</[INS]/></[LOC]/>. getTime ( ) )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> toLowerCase ( ).</[INS]/></[LOC]/>. toLowerCase ( )
</[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>Builder</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - 1
</[INS]/></[LOC]/> synchronized ( p ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> put</[INS]/></[LOC]/> this. put ( this. size ( ), key, value ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> str</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> str</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> str
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> for ( TYPE_2 VAR_4 : VAR_5 ) {
</[INS]/></[LOC]/>. toString ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> float</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Float. to
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[INS]/></[LOC]/>. name ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_2!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) - 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. getClass ( )
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 = true ; VAR_
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 ) >= 0 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> execute</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> VAR_1 <</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null )
</[INS]/></[LOC]/>3. init ( ) ; VAR_
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> min
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> x
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ++
</[INS]/></[LOC]/> ) { if ( intent!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> + 1 ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Collection
</[INS]/></[LOC]/>!</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> startsWith</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) )
</[INS]/></[LOC]/> return new TYPE_1 ( VAR_4 ) ; }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> static
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> text</[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> text
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.Date
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( value!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 =</[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> trim ( ).
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/> if ( ( VAR_4 )!= null )</[INS]/></[LOC]/> else return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.ArrayList < > ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Name</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Name
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { return super. METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>1 -= 1 ; VAR_</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> ) { if (! ( VAR_2. getText ( ). toString ( ). trim ( ). isEmpty ( ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName</[INS]/></[LOC]/> new java.lang.String</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( x. length ( ) ) == 1 ) x = "0" + x ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4 )</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>static</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, 0
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> sum
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> error</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> error
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( info ) ;
</[INS]/></[LOC]/> == 0 ) || ( ( i</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (! (</[INS]/></[LOC]/> ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) == null? null : new java.util.Date ( VAR_1. getTime ( ) )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.NullPointerException</[INS]/></[LOC]/> return false ;
</[INS]/></[LOC]/> if ( ( list )!= null )
</[INS]/></[LOC]/>, this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> str ). append</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( context!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Activity
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return false ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> index
</[INS]/></[LOC]/> ) { synchronized ( VAR_2</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> VAR_2 =
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getValue
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> [ ]</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( METHOD_4 ( ) ) == null ) return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( info!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. METHOD</[INS]/></[LOC]/> ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> b == null ) || ( (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ></[INS]/></[LOC]/> ) return false ; return true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>!</[INS]/></[LOC]/> ( 0 <=</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getTime
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getInt
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +
</[INS]/></[LOC]/>. replace ( STRING_6, STRING_7 )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.util.List <</[INS]/></[LOC]/> ></[INS]/></[LOC]/> java.util.List <</[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2 [ 0 ]
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 == null ) { return ; } java.lang.String VAR_3</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> TYPE_1
</[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> VAR_1. METHOD_1 ( ) ; this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> execute</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2 += VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( this. VAR_2 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Map < java.lang.String, java.lang.String >
</[INS]/></[LOC]/> new java.util.ArrayList (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> name
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1. commit ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return true ;
</[INS]/></[LOC]/>. get ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/>util.ArrayList < java.</[INS]/></[LOC]/> >
</[INS]/></[LOC]/> ) { if ( ( VAR_1. size ( ) ) > 0</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> synchronized ( VAR_1 ) { if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> } }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; } else { return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return VAR_4 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> else if ( type ==</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> else
</[INS]/></[LOC]/> null,
</[INS]/></[LOC]/> null,
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, java.lang.Integer id</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/>, id
</[INS]/></[LOC]/> setText ( false, null ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> if ( ( VAR_1 )!= ( - 1 ) )
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ) ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1. id
</[INS]/></[LOC]/> VAR_1 = VAR_1. toLowerCase ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> synchronized</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> "0"
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) + "\n"
</[INS]/></[LOC]/> if ( source == null ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static
</[INS]/></[LOC]/> VAR_2 =
</[INS]/></[LOC]/>, 0, 0, 0
</[INS]/></[LOC]/> ( VAR_1 ) == null? 0 :
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> position / (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> ) { if ( ( VAR_1. getValue ( ) )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3. get ( VAR_1 ) ) == null ) return false ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> else</[INS]/></[LOC]/> return ( ( TYPE_1 ) ( VAR_1. data ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> )!= null? VAR_1. get ( id ) : 1.0
</[INS]/></[LOC]/>6. METHOD_4 ( VAR_3, position ) ; VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> =</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws TYPE_1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>java
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.ArrayList < >
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + 1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Id
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1 expr =</[INS]/></[LOC]/> VAR_1. trim ( ) ; return expr ;
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> equals</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>? 0 : 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> try (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> fileName
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Exception
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_3 ) > 0</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> get
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ) ; VAR_2 = VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> event</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> || ( VAR_1. equals ( p ) ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, "true"
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) || ( ( VAR_2 ) == null )
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> for ( TYPE_1 value :</[INS]/></[LOC]/> values ( ) ) { if ( ( value.</[INS]/></[LOC]/>Id</[INS]/></[LOC]/> ) ) ==</[INS]/></[LOC]/> { return value ; } } return null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> ( ) ; start
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>java.lang.Long</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer
</[INS]/></[LOC]/>2. METHOD_3 ( ) ) - ( VAR_</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ), (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( args ) == null? new java.lang.Object [ 0 ] :</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> get
</[INS]/></[LOC]/> new java.util.LinkedList < TYPE_1 > (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>TYPE
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( ( VAR_2 )!= null )
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/> node
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new TYPE_1 ( true, response )
</[INS]/></[LOC]/> init ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> - 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> else { return 0 ; } }
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return false ; }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> isEmpty</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) ) + "\n"
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[INS]/></[LOC]/> METHOD_3 ( x ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( index ) ++ ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> to
</[INS]/></[LOC]/> METHOD_1 ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) return ;
</[INS]/></[LOC]/> this. VAR_2 = VAR_2 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1 p =</[INS]/></[LOC]/> return p ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { synchronized ( VAR_1</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int x, int y</[INS]/></[LOC]/>. x</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> x ; VAR_1. y = y
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. VAR_1 = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return false ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 =
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> target
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> java.lang.System.exit ( 0 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/> start, end,
</[INS]/></[LOC]/> new java.lang.String (</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ( VAR_4 ) ) +
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return null
</[INS]/></[LOC]/> assert obj instanceof TYPE_1 ;
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> VAR_1 ) ) || ( ( this ) ==
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> if ( VAR_2 > 0 )
</[INS]/></[LOC]/>. show ( )
</[INS]/></[LOC]/> t,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String number
</[INS]/></[LOC]/> VAR_4. METHOD_3 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Builder
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> if ( VAR_2!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> min
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_3 ( VAR_5, view, VAR_6, VAR_7 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/>, position
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. toUpperCase ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toLowerCase ( ). contains</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[INS]/></[LOC]/> if ( VAR_1 == null ) return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> =</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> trim ( ).
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return TYPE_1. METHOD_3 (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ; } else { return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[INS]/></[LOC]/>. show ( )</[INS]/></[LOC]/>. show ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString
</[INS]/></[LOC]/> ) { synchronized ( this</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> < TYPE_2 >
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false ; } return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.Class < TYPE_1 > type</[INS]/></[LOC]/> type
</[INS]/></[LOC]/> if ( VAR_1 > ( VAR_2 ) ) { VAR_2 = 0 ; } else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return true ;
</[INS]/></[LOC]/> ) { if (! ( VAR_1. isEmpty ( ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> key
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> pattern</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> pattern
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> delete</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public java.lang.String toString
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> )!= null ) && ( VAR_1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. trim ( )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size
</[INS]/></[LOC]/> if ( equals ( VAR_1 ) ) { return 0 ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/>3 VAR_3 = new TYPE_3 ( ) ; TYPE_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getValue
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> buffer</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if (! (</[INS]/></[LOC]/> ) ) { return false</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[INS]/></[LOC]/> if ( ( VAR_2 [ position ] ) == null ) return false ;
</[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.util.HashMap < java.lang.String, TYPE_1 > (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> intent =</[INS]/></[LOC]/> return intent ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>METHOD</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> byte [ ] data
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[INS]/></[LOC]/> return</[INS]/></[LOC]/> return - 1 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/>. toUpperCase ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> isEmpty</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1,
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( ( VAR_4 )!= null )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> message,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>static
</[INS]/></[LOC]/>, VAR_3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. METHOD_2 ( VAR_3, true, false ) ;
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( ( VAR_4 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( this. VAR_3 )!= null )
</[INS]/></[LOC]/> context
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1 node = null ; if ( ( super. METHOD_1 ( ) ) instanceof TYPE_1 ) { node =</[INS]/></[LOC]/> return node ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 ) { synchronized (</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> static
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_5 ) - (</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( target == ( this ) ) return ;
</[INS]/></[LOC]/>, VAR_3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> setEnabled</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> setEnabled
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { synchronized ( VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> content
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> throw
</[INS]/></[LOC]/>. length</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> event</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> event
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> boolean VAR_2 = true ;</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> (!</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; stringBuilder.append</[INS]/></[LOC]/> return this ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer id</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1. path</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1. path
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = true ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( getActivity ( ) ) instanceof TYPE_2 ) {</[INS]/></[LOC]/> else { } }
</[INS]/></[LOC]/> if ( VAR_1 == null ) { this. VAR_1 = null ; return ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 == null ) return ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[INS]/></[LOC]/> - INT_1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( ( line )!= null ) { line</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ) { synchronized ( this</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, VAR_2
</[INS]/></[LOC]/>. toString ( )
</[INS]/></[LOC]/> true,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && (! ( VAR_1. isEmpty ( ) ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. replace ( VAR_2, STRING_1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2. getId ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Object</[INS]/></[LOC]/> if ( VAR_1 instanceof TYPE_1 )</[INS]/></[LOC]/> ( ( TYPE_1 ) (</[INS]/></[LOC]/> ) )</[INS]/></[LOC]/> else return false ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( VAR_3 )!= null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> update</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( ( VAR_1. size ( ) ) > 0 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> replace
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String path
</[INS]/></[LOC]/> false,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1.0
</[INS]/></[LOC]/> init ( ) ;
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.util.ArrayList < java.lang.String > (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[INS]/></[LOC]/> if ( b ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> message
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getValue
</[INS]/></[LOC]/> STRING_1. equals (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( VAR_1 == null ) return null ;
</[INS]/></[LOC]/> ) { if ( data!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>. METHOD_1 ( )
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + 1 )
</[INS]/></[LOC]/> synchronized</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = true ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString
</[INS]/></[LOC]/> if ( ( VAR_1. METHOD_4 ( ) )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> 0,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> + 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> key</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> message</[INS]/></[LOC]/> key,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Collection
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )</[INS]/></[LOC]/> {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> number</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> number
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> == null ) { return false</[INS]/></[LOC]/> else { return true ; } }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Double</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -=
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) == 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + i )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( buffer )!= null ) && ( (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( VAR_3 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> org.testng.Assert.assert
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= (</[INS]/></[LOC]/> ) - 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> fileName
</[INS]/></[LOC]/> if ( date == null ) { return null ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. setValue (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int first
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> if ( string == null ) { return null ; }
</[INS]/></[LOC]/>. METHOD_2 ( ) ; this
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3 = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ||</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>synchronized TYPE</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1. METHOD_3 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 0,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> num
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>.write</[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>.write
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> false
</[INS]/></[LOC]/> VAR_3. METHOD_1 ( VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3
</[INS]/></[LOC]/> if ( VAR_2!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> == 1? VAR_2 : VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> float
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> element</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> element
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) - 1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> return ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>6</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ( ). METHOD_3
</[INS]/></[LOC]/> get ( ).
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[INS]/></[LOC]/> synchronized ( VAR_2 ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/>. getName ( ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>boolean</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>NotNull</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> boolean VAR_4,</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1. remove ( position ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1. METHOD_3 ( )
</[INS]/></[LOC]/> if ( obj == null ) return false ;
</[INS]/></[LOC]/> METHOD_3 ( VAR_4 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int id =</[INS]/></[LOC]/> return id ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return 0 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) return 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[INS]/></[LOC]/> final
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/>, false
</[INS]/></[LOC]/> result = false ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> update ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> /</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> /</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> /
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> : STRING_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> getActivity ( ),</[INS]/></[LOC]/> getActivity ( ),
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> android.view.View
</[INS]/></[LOC]/>. values ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int id =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; if ( id == (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, null, null
</[INS]/></[LOC]/>. show ( )
</[INS]/></[LOC]/> ( this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) || ( this.</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view. getContext
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>util</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Date</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> query</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> == null?</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> :</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. state
</[INS]/></[LOC]/> ) { if ( VAR_2</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>List</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> list</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> list
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> STRING</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. VAR
</[INS]/></[LOC]/> ) { synchronized ( VAR_3</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 ( response ). METHOD_
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Long
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/> VAR_1 *</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[INS]/></[LOC]/> ) ) ; return VAR_1</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( this. VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )</[INS]/></[LOC]/> (</[INS]/></[LOC]/> - 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. get ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> TYPE_5. init ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> not
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1</[INS]/></[LOC]/> final java.lang.Double VAR_2, final java.lang.Double VAR_3, final java.lang.Double VAR_4, final java.lang.Double VAR_5, final java.lang.Double VAR_6, final java.lang.Double VAR_7
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y
</[INS]/></[LOC]/> } else {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> java.util.Iterator <</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> > iterator</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( VAR_1 ></[INS]/></[LOC]/> ) return</[INS]/></[LOC]/> 1 ; else if (</[INS]/></[LOC]/> < ( this. data ) ) return 1 ; else return 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start</[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Object</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[INS]/></[LOC]/> target,
</[INS]/></[LOC]/> java.lang.Thread ( new</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> start
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + 1 )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.ArrayList
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return name
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> INT_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. VAR_2 = VAR_2 ;
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) { VAR_1 = first ; }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> remove ( VAR_1 ) ;
</[INS]/></[LOC]/> else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { if ( VAR_1 == null ) { VAR_2 = null ; } else</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. toString (
</[INS]/></[LOC]/> java.lang.String name,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> i -- ; if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( i < (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> >= 0 )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2 [ i ]
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return new</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>6 (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> if ( ( this. size ) == 0 ) { return VAR_1 ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> [</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ]
</[INS]/></[LOC]/> if ( ( this. VAR_1 ) == null ) { return VAR_3 ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> STRING_1,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) - 1
</[INS]/></[LOC]/> update ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3. METHOD_4 (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> assertTrue</[INS]/></[LOC]/>. isEmpty ( )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1, false
</[INS]/></[LOC]/>, true</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> break ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> assertTrue
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> )!= null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> output
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( VAR_1 )!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_2 ( STRING_1, STRING_2, null, true ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName ( )
</[INS]/></[LOC]/> return
</[INS]/></[LOC]/> return VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> * 1.0 )
</[INS]/></[LOC]/> ( get ( ) ) == null? 0 :
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3. METHOD_2 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 1,
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) - 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[INS]/></[LOC]/> final</[INS]/></[LOC]/>, VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> return
</[INS]/></[LOC]/>!</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> file</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 ) { return ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -
</[INS]/></[LOC]/> return size ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> i
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Set result =</[INS]/></[LOC]/> < TYPE_1 ></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ; for</[INS]/></[LOC]/> TYPE_1 c :</[INS]/></[LOC]/> result. add ( c</[INS]/></[LOC]/> ; return result
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) { return (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. id
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_4 = 1.0F ;
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_6 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> name
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>1 ( VAR_1 ) ; VAR_2. METHOD_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, STRING_4, STRING_3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + 1 )
</[INS]/></[LOC]/> getString (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return
</[INS]/></[LOC]/> if ( ( count ) == 0 ) { return new java.lang.Object [ 0 ] ; }
</[INS]/></[LOC]/> METHOD_2 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.util.ArrayList < > (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> i</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { if ( ( handle ) == null ) { return true ; } else</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ==</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[INS]/></[LOC]/> java.lang.Integer.parseInt (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>java
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( VAR_4 ) == null ) ||</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>TYPE</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> == null? 0 : VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>5 ( METHOD_3 ( event. METHOD_6 ( ) ) ) ; VAR_2. METHOD_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[INS]/></[LOC]/> if ( ( VAR_2 )!= null ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[INS]/></[LOC]/> ( ( ( VAR_1. METHOD_2 ( ) )!= null ) &&</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2 = position ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( VAR_1!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> TYPE_3,</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.String VAR_1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>println
</[INS]/></[LOC]/> ) { if ( VAR_1. contains ( STRING_1 )</[INS]/></[LOC]/> else { return VAR_1 ; } }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) ) && ( VAR_1 == ( this. VAR_1 )
</[INS]/></[LOC]/> ( ( int ) (</[INS]/></[LOC]/> ) ), false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) ) || (! ( TYPE_2. METHOD_2 ( VAR_1, VAR_2 ) )
</[INS]/></[LOC]/> if ( ( VAR_1 ) == null ) return null ;
</[INS]/></[LOC]/> throws java.lang.Exception</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.List
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) ) && (! ( VAR_2 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1.0
</[INS]/></[LOC]/> if ( init ) { return ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return
</[INS]/></[LOC]/> synchronized</[INS]/></[LOC]/> VAR_2 = null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> int id,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( type!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return 0
</[INS]/></[LOC]/> index,
</[INS]/></[LOC]/> VAR_2 = VAR_1 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ||
</[INS]/></[LOC]/> if ( VAR_1 == null ) return 1 ; if ( VAR_2 == null ) return - 1 ;
</[INS]/></[LOC]/> VAR_1 = null ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public abstract void
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.ArrayList</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> android.view.View view
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Double</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Double
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> METHOD_1 ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> ) { if ( ( METHOD_2 ( ) )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[INS]/></[LOC]/> 1,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 ; return this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/>, null, null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { return 0</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[INS]/></[LOC]/> true
</[INS]/></[LOC]/>, int type
</[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this. id = id
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Builder</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Builder
</[INS]/></[LOC]/> java.util.Map < java.lang.String, java.lang.String > params
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[INS]/></[LOC]/> return true ;</[INS]/></[LOC]/> return false ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Long</[INS]/></[LOC]/> if ( VAR_1 == null ) { return null ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>Value
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ; return
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 1,
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> values
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <</[INS]/></[LOC]/> return 1 ; if ( ( this. VAR_2</[INS]/></[LOC]/> > ( VAR_3 ) ) return - 1 ; return 0
</[INS]/></[LOC]/> return view ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new int [ ] { }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( size ) -- ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 0,
</[INS]/></[LOC]/> TYPE_2. METHOD_2 ( ). METHOD_3 ( STRING_2, null ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) && ( VAR_1!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> x</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> y
</[INS]/></[LOC]/> if ( p!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( ( VAR_1 )!= null ) && (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> == null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws TYPE_1</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return null ; }
</[INS]/></[LOC]/> synchronized</[INS]/></[LOC]/> } if ( ( VAR_2 )!= null ) {</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws java.io.IOException</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( VAR_1 == 0 ) { return false ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 = 0
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> else { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1. METHOD_1 ( ) ; } }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> synchronized</[INS]/></[LOC]/> new java.util.ArrayList (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Throwable
</[INS]/></[LOC]/> ) { if ( ( node )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> ) { if (! ( VAR_3. contains ( VAR_1 ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3 = null ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> trim ( ).
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws TYPE_2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )</[INS]/></[LOC]/> if ( ( VAR_2 )!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> view =</[INS]/></[LOC]/> return view ;
</[INS]/></[LOC]/> super. METHOD_1 ( state, VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Boolean
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if (! ( event. METHOD_2 ( ). equals ( VAR_1 ) )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> } else {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> org.testng.Assert.assert
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>java</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> return 0 ;
</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> return new</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1 (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> execute</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> || (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>5, VAR_</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>7</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[INS]/></[LOC]/> } else { VAR_2. METHOD_1 ( ) ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> byte [ ]</[INS]/></[LOC]/> new java.lang.String (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( VAR_1 ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> android</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>content</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Context context</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, null, null,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> trim</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_2 ) == 0 ) { java.lang.System.out.println ( STRING_1 ) ; } else
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( - 1 )</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> try {</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> android.content.Intent
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, 0
</[INS]/></[LOC]/>, null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> "false"
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = true ;
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1 == null ) return ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) { VAR_1. METHOD_2 ( ) ; }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long value =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ; return value
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + 1
</[INS]/></[LOC]/> ) { synchronized ( this</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> super. METHOD_1 ( event ) ;
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/>. substring ( 0, 1 ). toUpperCase ( ) ) + ( VAR_1. substring ( 1 ) ) )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( getActivity ( ) )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <=
</[INS]/></[LOC]/>, new java.util.ArrayList < > ( )
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> else { return null ; } }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> result
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> size ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[INS]/></[LOC]/> ) { if ( ( VAR_1 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, java.lang.String text</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> text
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> out.write</[INS]/></[LOC]/> size += buffer. length ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1 = java.lang.Math.abs ( VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( METHOD_3 ( ) )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public static</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.System.out.println (</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> } else {</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> --
</[INS]/></[LOC]/> java.util.List <</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> + 1 )
</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> double
</[INS]/></[LOC]/> ) { if ( ( VAR_2 )!= null</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, java.lang.String id</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> long
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> --</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> -
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getId</[INS]/></[LOC]/>. getId ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Integer id</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> id
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Integer</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Int
</[INS]/></[LOC]/> new java.lang.String (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.lang.String (</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) % ( VAR_2. length ) )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[INS]/></[LOC]/> return VAR_3 ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> throws java.io.IOException</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new java.util.ArrayList (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> else
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, VAR_4
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. name
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) ) || ( TYPE_1. isEmpty ( VAR_1. trim ( ) )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, position
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> if ( null!= ( TYPE_1. getContext ( ) ) )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false</[INS]/></[LOC]/> METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_3
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. compareTo</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> STRING_1</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Random</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.Random
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> x</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> x
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> < TYPE_3 ></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> ) + VAR_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, VAR_6</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_2. METHOD_2 (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( VAR_4 ) -- ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { if ( ( VAR_1 ) == null ) { return null ; } else</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> break ;</[INS]/></[LOC]/> break ;
</[INS]/></[LOC]/> android.content.Context context = getContext ( ) ; if ( context == null ) return null ;</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context
</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return toString (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { if ( ( VAR_1 )!= null )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> status</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> abstract</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>lang</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, name
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, TYPE_1 type
</[INS]/></[LOC]/> final</[INS]/></[LOC]/> final
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> name +</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_1. METHOD_3 ( false ) ;
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> ) - ( offset ) )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> put
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( VAR_1. METHOD_2 ( ) ) == null? 0 :
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.ArrayList < >
</[INS]/></[LOC]/> f. setEnabled ( true ) ;
</[INS]/></[LOC]/> if ( VAR_1 == 0 ) {</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> p ; } return METHOD_1 ( VAR_1, ( p % VAR_1 ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected</[INS]/></[LOC]/> super. start ( ) ;
</[INS]/></[LOC]/> 1,
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! ( STRING_1. equals</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String url</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> url
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 0,
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ||</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> >
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( data ) == null ) return 0 ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, VAR_2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> =</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( x == 0 ) return 0 ; else
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_2 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> words</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> length</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> [</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ] =</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( (</[INS]/></[LOC]/> -- ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[INS]/></[LOC]/> if ( state == ( VAR_2 ) ) VAR_3 = false ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> type
</[INS]/></[LOC]/> ) { if ( n > 0</[INS]/></[LOC]/> return 0 ; }
</[INS]/></[LOC]/> if ( ( VAR_4 )!= null ) {</[INS]/></[LOC]/> return super. METHOD_1 ( VAR_1, VAR_2, VAR_3 ) ; }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> toString
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return!</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>boolean</[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.System.out.println ( VAR_3. METHOD_2 ( ) ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, java.lang.String token
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( first == null ) { return VAR_1 == null ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> this. getIntent ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/> = null</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( VAR_2!= null ) {</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> temp ++ ;</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ( VAR_2 [ 1 ] ) > 0 ) { VAR_2 [ 1 ] = 0 ; } if (
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( position > 0 ) add (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ; else remove ( VAR_1 )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> target,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>, VAR_4
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> file</[INS]/></[LOC]/> ( ( file!= null ) && ( VAR_2!= null ) ) && (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> file )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1 == ( getContext ( ) )</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>, true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[INS]/></[LOC]/> android.content.Context context,</[INS]/></[LOC]/> context
</[INS]/></[LOC]/>3. assertNotNull ( STRING_</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) -
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>L
</[INS]/></[LOC]/> if ( (! ( name. isEmpty ( ) ) ) && ( ( name. trim ( ). length ( ) ) > 0 ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_4 )!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> key
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> METHOD_1 ( VAR_1, new java.util.HashSet < > ( ) )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.Thread
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> float</[INS]/></[LOC]/> return VAR_1 ;
</[INS]/></[LOC]/> {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return null
</[INS]/></[LOC]/>, VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1
</[INS]/></[LOC]/> [ ]
</[INS]/></[LOC]/>, 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getName
</[INS]/></[LOC]/>, 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> error
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[INS]/></[LOC]/>, int position
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) ==</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> void METHOD_1 (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> org.testng.Assert.assert
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[INS]/></[LOC]/> > 0
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, error
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1 = null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/> synchronized ( VAR_1 ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( this. VAR_2 )!= null</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> static
</[INS]/></[LOC]/> ) { synchronized ( this</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> void</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> label
</[INS]/></[LOC]/> java.lang.System.out.println ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> update ( ) ;
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>! (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if</[INS]/></[LOC]/> == null</[INS]/></[LOC]/> return ; if ( value == null ) return
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> = VAR_1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, position
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.lang.String [ ] message
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( ( METHOD_2 ( ). METHOD_3 ( ) )!= null</[INS]/></[LOC]/> return false ; }
</[INS]/></[LOC]/> if ( ( VAR_1 == null ) || ( to == null ) ) return ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> &&
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> count
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> getData ( )
</[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> ) { if ( VAR_1!= null</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> remove</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> remove</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> 1 - (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> super.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[INS]/></[LOC]/> VAR_1
</[INS]/></[LOC]/> out ) ; TYPE_1. METHOD_4 (
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> )!=</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_1!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> int [ ] [ ] a ; int [ ] [ ] b ;
</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/>2 state, TYPE_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return null
</[INS]/></[LOC]/> super. METHOD_1 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( VAR_2. contains ( VAR_1 ) )
</[INS]/></[LOC]/> if ( ( --</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> super. METHOD_1 ( out, VAR_1 ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>4 ) - ( VAR_5 ) ) - ( ( VAR_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 0</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> <
</[INS]/></[LOC]/>3 ( false ) ; METHOD_</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> [ ]
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> file
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> super
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_1. size
</[INS]/></[LOC]/> ) { if ( ( VAR_2. size ( ) ) > 0</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> context
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> || (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> VAR_2. METHOD_3 ( ),
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>protected
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> final
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_2 = true ;
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1 VAR_2</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> { }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> boolean result =</[INS]/></[LOC]/> METHOD_1 ( ) ; return result ;
</[INS]/></[LOC]/> if ( VAR_1. contains ( "name" ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.util.List
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[INS]/></[LOC]/> ) { if ( VAR_2. contains ( VAR_1 )</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_4 ( INT_1, false ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( ( VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/>. name ( )
</[INS]/></[LOC]/> if (! ( METHOD_2 ( ). contains ( VAR_1 ) ) ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[INS]/></[LOC]/> android.content.Context context</[INS]/></[LOC]/> context,
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ) - ></[INS]/></[LOC]/>. toString (
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> position = position ; this.</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> = VAR_1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> item
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> int x, int y,
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> height
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( VAR_1 *
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>5</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new TYPE</[INS]/></[LOC]/> ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[INS]/></[LOC]/>, java.lang.String key
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> add</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ( - 1 )
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> STRING_1</[INS]/></[LOC]/> result = 0 ;
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> if ( VAR_1 == null ) { VAR_1 = new java.util.LinkedList < > ( ) ; }
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> n
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return ; }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>String
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> break ;</[INS]/></[LOC]/> break ; }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> new java.util.HashMap < >
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Map</[INS]/></[LOC]/> java.lang.String,</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> METHOD_3 ( ) ;</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> STRING_2,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> a
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> true
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> isEmpty (</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1 tmp = VAR_1
</[INS]/></[LOC]/> if ( ( this. VAR_3 )!= null ) {</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> }</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. equals (</[INS]/></[LOC]/> )
</[INS]/></[LOC]/> size = 0 ;
</[INS]/></[LOC]/> count = 0 ;
</[INS]/></[LOC]/> this.</[INS]/></[LOC]/> this.
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null ) {</[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> this
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. set (</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> { if ( ( VAR_2 ) == null ) { return null ; } else</[INS]/></[LOC]/> }
</[INS]/></[LOC]/> if ( ( VAR_1 )!= null )
</[INS]/></[LOC]/> if ( VAR_1 == null ) return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!= null</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if (! (</[INS]/></[LOC]/> ) ) return null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> TYPE_1</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> for</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String f : VAR</[INS]/></[LOC]/> ) { if</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>. startsWith ( f</[INS]/></[LOC]/> {</[INS]/></[LOC]/> } }
</[INS]/></[LOC]/> this.
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> if ( VAR_1 == null ) { return STRING_1 ; }
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> if ( name!= null )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> 1
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>Void</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return null ;
</[INS]/></[LOC]/> (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>3</[INS]/></[LOC]/> ) ) + ( TYPE_1. METHOD_3 ( )
</[INS]/></[LOC]/> if ( ( VAR_1. METHOD_2 ( ). get ( STRING_1 ) )!= null )</[INS]/></[LOC]/> return null ;
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> +
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> %</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> %
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> null
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>private
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> ==
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> (</[INS]/></[LOC]/> )!= null? VAR_1 : new java.util.ArrayList < TYPE_1 < java.lang.String, java.lang.String > > ( )
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> key
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> build</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> java.lang.String</[INS]/></[LOC]/> STRING_1,</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR_3 =</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>?</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> :</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> java.util.Collections.sort (</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>,
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/>, false
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> synchronized
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> new TYPE_1 ( ) ;
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2
</[INS]/></[LOC]/> position ( VAR_2. size ( ) ) ; VAR_2.
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> false
</[INS]/></[LOC]/> VAR_1. METHOD_2 ( true ) ;</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1
</[INS]/></[LOC]/>1, VAR_
</[INS]/></[LOC]/>. toLowerCase ( )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> VAR</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>1. getContext
</[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> synchronized</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> int</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>4</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public
</[INS]/></[LOC]/> if ( ( VAR_1. size ( ) ) < 1 ) return null ; else
</[DEL]/></[LOC]/></[LOC]/>
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>public boolean</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>2</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[DEL]/></[LOC]/></[LOC]/>
</[INS]/></[LOC]/> VAR_3 = null ;
</[INS]/></[LOC]/> ( ( ( event. METHOD_2 ( ) )!= null ) &&</[INS]/></[LOC]/> )
</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> return</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/>!=</[DEL]/></[LOC]/></[LOC]/></[INS]/></[LOC]/> && (</[INS]/></[LOC]/> )